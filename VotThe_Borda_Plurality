DOCUMENT();

loadMacros(
   "PGstandard.pl",
   "MathObjects.pl",
   "weightedGrader.pl",
   "PGessaymacros.pl",
   "PGinfo.pl",
   "niceTables.pl",
   "unionTables.pl",
   "parserPopUp.pl",
   "PGchoicemacros.pl",
);

install_weighted_grader();
TEXT(beginproblem());
$showPartialCorrectAnswers = 1;
$refreshCachedImages = 1;

##############################################################
#
#  Setup
#
#

Context("Numeric");
Context()->flags->set(
  tolerance => 0.5,
  tolType => "absolute",
);

do {
$column1 = int(random(140,160,1));
$column2 = int(random(120,140,1));
$column3 = int(random(100,120,1));
$column4 = int(random(80,100,1));
$column5 = int(random(60,80,1));
$column6 = int(random(40,60,1));

$cVotes = $column1+$column6;
$jVotes = $column2+$column5;
$dVotes = $column3+$column4;

$cBorda = 3*$column1 + 2*$column2 + 2*$column3 + 1*$column4 + 1*$column5 + 3*$column6;
$jBorda = 1*$column1 + 3*$column2 + 1*$column3 + 2*$column4 + 3*$column5 + 2*$column6;
$dBorda = 2*$column1 + 1*$column2 + 3*$column3 + 3*$column4 + 2*$column5 + 1*$column6;

} until ((($cVotes != $jVotes and $cVotes != $dVotes) and $jVotes != $dVotes) and
         (($cBorda != $jBorda and $cBorda != $dBorda) and $jBorda != $dBorda));

if ($cVotes > $jVotes and $cVotes > $dVotes) {
    $pluWinner = PopUp(["?", "C", "J", "D"], "C");
    $PluVotes = $column1 + $column6;
} elsif ($jVotes > $cVotes and $jVotes > $dVotes) {
    $pluWinner = PopUp(["?", "C", "J", "D"], "J");
    $PluVotes = $column2 + $column5;
} else {
    $pluWinner = PopUp(["?", "C", "J", "D"], "D");
    $PluVotes = $column3 + $column4;
}

if ($cBorda > $jBorda and $cBorda > $dBorda) {
    $borWinner = PopUp(["?", "C", "J", "D"], "C");
} elsif ($jBorda > $cBorda and $jBorda > $dBorda) {
    $borWinner = PopUp(["?", "C", "J", "D"], "J");
} else {
    $borWinner = PopUp(["?", "C", "J", "D"], "D");
}

##############################################################
#
#  Text
#
#
Context()->texStrings;
BEGIN_TEXT
$test
$BR
“Chicago’s Home For Jazz” radio station 90.9 WDCB is trying to determine who the their audience's favorite historical jazz musician is. After some surveying, the hosts reduced the options to just three musicians: Count Basie (C), John Coltrane (J), Dizzy Gillespie (D). Listeners were then able to call in and submit their rankings. The results are listed below:
$PAR

\{
DataTable(
[
["Votes", $column1, $column2, $column3, $column4, $column5, $column6],
["1st", "C", "J", "D", "D", "J", "C"],
["2nd", "D", "C", "C", "J", "D", "J"],
["3rd", "J", "D", "J", "C", "C", "D"]
],
caption=>' ',
midrules=>1,
align=>'|p{.2in}|p{.2in}|p{.2in}|p{.2in}|p{.2in}|p{.2in}|p{.2in}|',
);
\}

$BBOLD 1. (2 pts)$EBOLD 
$BR
Using the plurality voting method, determine the winner of this competition.
$BR
$BR
$BCENTER
The winner of the competition using the Plurality method is \{$pluWinner->menu()\} with \{ans_rule\} votes.
$ECENTER

$PAR
$BBOLD 2. (4 pts)$EBOLD 
$BR
Using the Borda Count voting method, determine the winner of this competition.
$BR

$BCENTER
Point total for C \(=\) \{ans_rule\}.
$BR
Point total for J \(=\) \{ans_rule\}.
$BR
Point total for D \(=\) \{ans_rule\}.
$BR
Borda count winner is \{$borWinner->menu()\}.
$ECENTER

$BR
$BR
If you have work that you would like to show for this problem, please enter it here:
$BR
\{essay_box(5,50)\}

END_TEXT
Context()->normalStrings;
##############################################################
#
#  Answers
#
#


WEIGHTED_ANS($pluWinner->cmp(), 100/6);
WEIGHTED_ANS(Real($PluVotes)->cmp(), 100/6);

$cBorStu = 0;
WEIGHTED_ANS(Real($cBorda)->cmp(checker=> sub {
    my ( $correctAns, $studentAns, $ansHash ) = @_;
    $cBorStu = $studentAns;
    
    if (abs($cBorda - $studentAns) <= 5) {
        $ansHash->{ans_message} = "Great job!";
        return 1.0
    } else {
        $ansHash->{ans_message} = "This answer is not correct.";
        return 0.0
    }
}),100/6);

$jBorStu = 0;
WEIGHTED_ANS(Real($jBorda)->cmp(checker=> sub {
    my ( $correctAns, $studentAns, $ansHash ) = @_;
    $jBorStu = $studentAns;
    
    if (abs($jBorda - $studentAns) <= 5) {
        $ansHash->{ans_message} = "Great job!";
        return 1.0
    } else {
        $ansHash->{ans_message} = "This answer is not correct.";
        return 0.0
    }
}),100/6);

$dBorStu = 0;
WEIGHTED_ANS(Real($dBorda)->cmp(checker=> sub {
    my ( $correctAns, $studentAns, $ansHash ) = @_;
    $dBorStu = $studentAns;
    
    if (abs($dBorda - $studentAns) <= 5) {
        $ansHash->{ans_message} = "Great job!";
        return 1.0
    } else {
        $ansHash->{ans_message} = "This answer is not correct.";
        return 0.0
    }
}),100/6);

$borWinC = PopUp(["?", "C", "J", "D"], "C");
$borWinJ = PopUp(["?", "C", "J", "D"], "J");
$borWinD = PopUp(["?", "C", "J", "D"], "D");

WEIGHTED_ANS($borWinner->cmp(checker=> sub {
    my ( $correctAns, $studentAns, $ansHash ) = @_;

    if (($cBorStu > $jBorStu and $cBorStu > $dBorStu) and $borWinC eq $studentAns) {
        return 1.0;
    } elsif (($jBorStu > $cBorStu and $jBorStu > $dBorStu) and $borWinJ eq $studentAns) {
        return 1.0;
    } elsif (($dBorStu > $cBorStu and $dBorStu > $jBorStu) and $borWinD eq $studentAns) {
        return 1.0;
    } elsif ($borWinner eq $studentAns) {
        return 1.0
    } else {
        return 0.0;
    }
}), 100/6);

WEIGHTED_ANS(sub {essay_cmp()->evaluate(@_)}, 0);

ENDDOCUMENT();
